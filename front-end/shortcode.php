<?php
/**
 * Description: This file contains the shortcode handler for the
 * 'influactive_form' shortcode.
 *
 * @throws RuntimeException If the WordPress environment is not loaded.
 * @package Forms by Influactive
 */

if ( ! defined( 'ABSPATH' ) ) {
	throw new RuntimeException( 'WordPress environment not loaded. Exiting...' );
}

/**
 * Registers the 'influactive_form' shortcode.
 */
function influactive_register_form_shortcode(): void {
	add_shortcode( 'influactive_form', 'influactive_form_shortcode_handler' );
}

add_action( 'init', 'influactive_register_form_shortcode', 1 );

/**
 * Handles the influactive form shortcode.
 *
 * @param array $atts The shortcode attributes.
 *
 * @return string The HTML generated by the shortcode.
 */
function influactive_form_shortcode_handler( array $atts ): string {
	ob_start();

	$atts = shortcode_atts(
		array(
			'id'      => '0',
			'form_id' => '0',
		),
		$atts,
		'influactive_form'
	);

	$form_id = (int) $atts['id'];

	if ( ! $form_id ) {
		return false;
	}

	// Showing the form if it exists.
	$form = get_post( $form_id );

	if ( $form && 'publish' === $form->post_status && 'influactive-forms' === $form->post_type ) {
		update_post_meta( get_the_ID(), 'influactive_form_id', $form_id );

		$fields = get_post_meta( $form_id, '_influactive_form_fields', true ) ?? array();
		?>
		<div class="influactive-form-wrapper">
			<form
				id="influactive-form-<?php echo esc_attr( $form_id ); ?>"
				class="influactive-form"
			>

				<?php
				wp_nonce_field( 'influactive_send_email', 'nonce' );
				?>

				<input
					type="hidden"
					name="form_id"
					value="<?php echo esc_attr( $form_id ); ?>"
				>


				<?php
				$options_captcha    = get_option( 'influactive-forms-captcha-fields' ) ?? array();
				$public_site_key    = $options_captcha['google-captcha']['public-site-key'] ?? '';
				$secret_site_key    = $options_captcha['google-captcha']['secret-site-key'] ?? '';

				if ( ! empty( $public_site_key ) && ! empty( $secret_site_key ) ) {
					?>

					<input
						type="hidden"
						id="recaptchaResponse-<?php echo esc_attr( $form_id ); ?>"
						name="recaptcha_response">
					<input
						type="hidden"
						id="recaptchaSiteKey-<?php echo esc_attr( $form_id ); ?>"
						name="recaptcha_site_key"
						value="<?php echo esc_attr( $public_site_key ); ?>">

					<?php
				}

				if ( is_plugin_active( 'influactive-forms/functions.php' ) && get_option( 'modal_form_select' ) ) {
					?>

					<input
						type="hidden"
						name="brochure"
						value="<?php echo esc_attr( get_option( 'modal_form_file_select' ) ); ?>"
					>

					<?php
				}

				if ( is_array( $fields ) ) {
					foreach ( $fields as $field ) {
						if ( isset( $field['required'] ) && '1' === $field['required'] ) {
							$required = 'required';
						} else {
							$required = '';
						}

						switch ( $field['type'] ) {
							case 'text':
								?>

								<label>
									<?php echo esc_attr( $field['label'] ); ?>:
									<input
										type="text"<?php echo esc_attr( $required ); ?>
										name="<?php echo esc_attr( $field['name'] ); ?>"
									>
								</label>

								<?php
								break;
							case 'email':
								?>

								<label>
									<?php echo esc_attr( $field['label'] ); ?>:
									<input
										type="email" <?php echo esc_attr( $required ); ?>
										name="<?php echo esc_attr( $field['name'] ); ?>"
										autocomplete="email"
									>
								</label>

								<?php
								break;
							case 'number':
								?>

								<label>
									<?php echo esc_attr( $field['label'] ); ?>:
									<input
										type="number" <?php echo esc_attr( $required ); ?>
										name="<?php echo esc_attr( $field['name'] ); ?>">
								</label>

								<?php
								break;
							case 'textarea':
								?>

								<label>
									<?php echo esc_attr( $field['label'] ); ?>:
									<textarea <?php echo esc_attr( $required ); ?>
									name="<?php echo esc_attr( $field['name'] ); ?>"
									rows="10"></textarea>
								</label>

								<?php
								break;
							case 'select':
								?>

								<label>
									<?php echo esc_attr( $field['label'] ); ?>:
									<select <?php echo esc_attr( $required ); ?>
										name="<?php echo esc_attr( $field['name'] ); ?>">

										<?php
										foreach ( $field['options'] as $option ) {
											?>

											<option
												value="<?php echo esc_attr( $option['value'] ); ?>:<?php echo esc_attr( $option['label'] ); ?>">
												<?php echo esc_attr( $option['label'] ); ?>
											</option>

											<?php
										}
										?>

									</select>
								</label>

								<?php
								break;
							case 'gdpr':
								$gdpr_translate = __( 'Check our Privacy Policy', 'influactive-forms' );
								$gdpr_text  = '<a href="' . get_privacy_policy_url() . '" target="_blank" title="Privacy Policy">' . $gdpr_translate . '</a>';
								$pp_content = get_privacy_policy_url() ? $gdpr_text : '';
								?>

								<label>
									<input
										type="checkbox"
										name="<?php echo esc_attr( $field['name'] ); ?>"
										required
									>
									<?php echo wp_kses_post( $field['label'] ) . ' ' . wp_kses_post( $pp_content ); ?>
								</label>

								<?php
								break;
							case 'free_text':
								?>

								<div class="free-text">
									<?php echo wp_kses_post( $field['label'] ); ?>
								</div>

								<input
									type="hidden"
									name="<?php echo esc_attr( $field['name'] ); ?>"
									value="<?php echo esc_attr( $field['label'] ); ?>"
								>

								<?php
								break;
						}
					}
				}
				?>

				<input type="submit">
				<div class="influactive-form-message"></div>
			</form>
		</div>

		<?php
	}

	return ob_get_clean();
}

/**
 * Enqueues the dynamic style for the 'influactive_form' shortcode.
 *
 * This method checks if the current page is in the admin section and if not, it retrieves the form ID from the 'influactive_form_id' meta field of the current post.
 * If the form ID is not found or is falsy, the method returns without enqueueing the dynamic style.
 * Otherwise, it constructs the URL of the dynamic style by appending the form ID as a query parameter to the admin-ajax.php URL.
 * Finally, it enqueues the 'influactive-form-dynamic-style' stylesheet with the constructed URL and a version number of '1.3.2.1'.
 *
 * @return void
 */
function influactive_enqueue_form_dynamic_style(): void {
	if ( is_admin() ) {
		return;
	}

	$form_id = get_post_meta( get_the_ID(), 'influactive_form_id', true ) ?? 0;
	if ( ! $form_id ) {
		return;
	}

	$dynamic_style_url = admin_url( 'admin-ajax.php' ) . '?action=influactive_dynamic_style&post_id=' . $form_id;

	wp_enqueue_style(
		'influactive-form-dynamic-style',
		$dynamic_style_url,
		array(),
		'1.3.2.1'
	);
}

add_action( 'wp_enqueue_scripts', 'influactive_enqueue_form_dynamic_style' );


/**
 * Sets the content type as text/css and outputs the CSS styles for the 'influactive_form' shortcode.
 *
 * @return void
 */
function influactive_form_style_frontend(): void {
	header( 'Content-type: text/css; charset: UTF-8' );

	$my_post_id  = isset( $_REQUEST['post_id'] ) ? (int) $_REQUEST['post_id'] : 0;
	$email_style = get_post_meta( $my_post_id, '_influactive_form_email_style', true );
	$form        = $email_style['form'];
	$label       = $email_style['label'];
	$input       = $email_style['input'];
	$submit      = $email_style['submit'];
	$free_text   = $email_style['free_text'];

	ob_start();
	?>
	.influactive-form-wrapper {
	padding: <?php echo esc_html( $form['padding'] ); ?>;
	background-color: <?php echo esc_html( $form['background_color'] ); ?>;
	border-width: <?php echo esc_html( $form['border_width'] ); ?>;
	border-style: <?php echo esc_html( $form['border_style'] ); ?>;
	border-color: <?php echo esc_html( $form['border_color'] ); ?>;
	}

	.influactive-form-wrapper label {
	font-weight: <?php echo esc_html( $label['font_weight'] ); ?>;
	font-family: <?php echo esc_html( $label['font_family'] ); ?>;
	font-size: <?php echo esc_html( $label['font_size'] ); ?>;
	color: <?php echo esc_html( $label['font_color'] ); ?>;
	line-height: <?php echo esc_html( $label['line_height'] ); ?>;
	}

	.influactive-form-wrapper input[type="text"],
	.influactive-form-wrapper input[type="email"],
	.influactive-form-wrapper input[type="number"],
	.influactive-form-wrapper textarea,
	.influactive-form-wrapper select {
	padding: <?php echo esc_html( $input['padding'] ); ?>;
	border-width: <?php echo esc_html( $input['border_width'] ); ?>;
	border-style: <?php echo esc_html( $input['border_style'] ); ?>;
	border-color: <?php echo esc_html( $input['border_color'] ); ?>;
	border-radius: <?php echo esc_html( $input['border_radius'] ); ?>;
	background-color: <?php echo esc_html( $input['background_color'] ); ?>;
	color: <?php echo esc_html( $input['font_color'] ); ?>;
	font-size: <?php echo esc_html( $input['font_size'] ); ?>;
	font-weight: <?php echo esc_html( $input['font_weight'] ); ?>;
	font-family: <?php echo esc_html( $input['font_family'] ); ?>;
	line-height: <?php echo esc_html( $input['line_height'] ); ?>;
	}

	.influactive-form-wrapper input[type="checkbox"] {
	color: <?php echo esc_html( $input['font_color'] ); ?>;
	font-size: <?php echo esc_html( $input['font_size'] ); ?>;
	font-weight: <?php echo esc_html( $input['font_weight'] ); ?>;
	font-family: <?php echo esc_html( $input['font_family'] ); ?>;
	line-height: <?php echo esc_html( $input['line_height'] ); ?>;
	}

	.influactive-form-wrapper input[type="submit"] {
	padding: <?php echo esc_html( $submit['padding'] ); ?>;
	color: <?php echo esc_html( $submit['font_color'] ); ?>;
	background-color: <?php echo esc_html( $submit['background_color'] ); ?>;
	border-radius: <?php echo esc_html( $submit['border_radius'] ); ?>;
	border-width: <?php echo esc_html( $submit['border_width'] ); ?>;
	border-style: <?php echo esc_html( $submit['border_style'] ); ?>;
	border-color: <?php echo esc_html( $submit['border_color'] ); ?>;
	font-size: <?php echo esc_html( $submit['font_size'] ); ?>;
	font-weight: <?php echo esc_html( $submit['font_weight'] ); ?>;
	font-family: <?php echo esc_html( $submit['font_family'] ); ?>;
	line-height: <?php echo esc_html( $submit['line_height'] ); ?>;
	}

	.influactive-form-wrapper input[type="submit"]:hover {
	background-color: <?php echo esc_html( $submit['background_hover_color'] ); ?>;
	color: <?php echo esc_html( $submit['font_hover_color'] ); ?>;
	}

	.influactive-form-wrapper .free-text {
	font-size: <?php echo esc_html( $free_text['font_size'] ); ?>;
	font-weight: <?php echo esc_html( $free_text['font_weight'] ); ?>;
	font-family: <?php echo esc_html( $free_text['font_family'] ); ?>;
	line-height: <?php echo esc_html( $free_text['line_height'] ); ?>;
	color: <?php echo esc_html( $free_text['color'] ); ?>;
	}

	<?php
	$css = ob_get_clean();
	echo esc_html( $css );
	exit;
}

add_action( 'wp_ajax_influactive_dynamic_style', 'influactive_form_style_frontend' );
add_action( 'wp_ajax_nopriv_influactive_dynamic_style', 'influactive_form_style_frontend' );

/**
 * Sends an email based on the submitted form data.
 *
 * @return void
 * @throws RuntimeException If the captcha is not valid.
 */
function influactive_send_email(): void {
	$_POST = array_map( 'wp_kses_post', $_POST );

	if ( isset( $_POST['nonce'] ) ) {
		$nonce = sanitize_text_field( wp_unslash( $_POST['nonce'] ) );
	}

	// Check if our nonce is set and verify it.
	if ( empty( $nonce ) || ! wp_verify_nonce( $nonce, 'influactive_send_email' ) ) {
		wp_send_json_error( array( 'message' => __( 'Nonce verification failed', 'influactive-forms' ) ) );

		exit;
	}

	if ( empty( $_POST['form_id'] ) ) {
		wp_send_json_error( array( 'message' => __( 'Form ID is required', 'influactive-forms' ) ) );

		exit;
	}

	$form_id = (int) $_POST['form_id'];

	$fields = get_post_meta( $form_id, '_influactive_form_fields', true ) ?? array();

	foreach ( $fields as $field ) {
		if ( isset( $_POST[ $field['name'] ] ) && empty( $_POST[ $field['name'] ] ) && '1' === $field['required'] ) {
			$name = $field['name'];
			/* translators: %s is a placeholder for the field name */
			$message = sprintf( __( 'The field %s is required', 'influactive-forms' ), $name );
			wp_send_json_error( array( 'message' => $message ) );

			exit;
		}
	}

	$email_layout = get_post_meta( $form_id, '_influactive_form_email_layout', true ) ?? array();
	$sitename     = get_bloginfo( 'name' );

	$options_captcha = get_option( 'influactive-forms-captcha-fields' ) ?? array();
	$secret_site_key = $options_captcha['google-captcha']['secret-site-key'] ?? '';

	if ( isset( $_POST['recaptcha_site_key'] ) ) {
		$public_site_key = sanitize_text_field( wp_unslash( $_POST['recaptcha_site_key'] ) );
	}

	if ( isset( $_POST['recaptcha_response'] ) ) {
		$recaptcha_response = sanitize_text_field( wp_unslash( $_POST['recaptcha_response'] ) );
	}

	if ( ! empty( $secret_site_key ) && ! empty( $public_site_key ) && isset( $recaptcha_response ) ) {
		$recaptcha_url = 'https://www.google.com/recaptcha/api/siteverify';

		$url = $recaptcha_url . '?secret=' . urlencode( $secret_site_key ) . '&response=' . urlencode( $recaptcha_response );

		$ch = curl_init();
		curl_setopt( $ch, CURLOPT_URL, $url );
		curl_setopt( $ch, CURLOPT_RETURNTRANSFER, 1 );
		try {
			$response = curl_exec( $ch );
			if ( curl_errno( $ch ) ) {
				throw new RuntimeException( curl_error( $ch ) );
			}
		} catch ( RuntimeException $e ) {
			wp_send_json_error(
				array(
					'message' => __( 'Failed to verify reCAPTCHA', 'influactive-forms' ),
					'error'   => $e->getMessage(),
				)
			);
			curl_close( $ch );
			exit;
		}
		curl_close( $ch );

		try {
			$recaptcha = json_decode( $response, false, 512, JSON_THROW_ON_ERROR );

			if ( $recaptcha->score < 0.5 ) {
				wp_send_json_error(
					array(
						'message' => __( 'Bot detected', 'influactive-forms' ),
						'score'   => $recaptcha->score,
					)
				);

				exit;
			}
		} catch ( JsonException $e ) {
			wp_send_json_error(
				array(
					'message' => __( 'Failed to verify reCAPTCHA', 'influactive-forms' ),
					'error'   => $e->getMessage(),
				)
			);

			exit;
		}
	}

	$layouts = $email_layout ?? array();
	$error   = 0;
	foreach ( $layouts as $layout ) {
		$content = $layout['content'] ?? '';
		$subject = $layout['subject'] ?? '';
		$to      = $layout['recipient'] ?? get_bloginfo( 'admin_email' );
		$from    = $layout['sender'] ?? get_bloginfo( 'admin_email' );

		foreach ( $fields as $field ) {
			if ( isset( $_POST[ $field['name'] ] ) ) {
				$raw_data = filter_input( INPUT_POST, $field['name'], FILTER_UNSAFE_RAW );
				$name     = wp_kses_post( nl2br( $raw_data ) );
			} else {
				$name = '';
			}

			if ( 'select' === $field['type'] ) {
				$content = influactive_replace_field_placeholder( $content, $field['name'], explode( ':', $name ) );
				$subject = influactive_replace_field_placeholder( $subject, $field['name'], explode( ':', $name ) );
				$to      = influactive_replace_field_placeholder( $to, $field['name'], explode( ':', $name ) );
				$from    = influactive_replace_field_placeholder( $from, $field['name'], explode( ':', $name ) );
			} elseif ( 'email' === $field['type'] ) {
				$content = str_replace( '{' . $field['name'] . '}', sanitize_email( $name ), $content );
				$subject = str_replace( '{' . $field['name'] . '}', sanitize_email( $name ), $subject );
				$to      = str_replace( '{' . $field['name'] . '}', sanitize_email( $name ), $to );
				$from    = str_replace( '{' . $field['name'] . '}', sanitize_email( $name ), $from );
			} else {
				$content = str_replace(
					'{' . $field['name'] . '}',
					wp_kses_post( $name ),
					$content
				);
				$subject = str_replace(
					'{' . $field['name'] . '}',
					wp_kses_post( $name ),
					$subject
				);
				$to      = str_replace(
					'{' . $field['name'] . '}',
					wp_kses_post( $name ),
					$to
				);
				$from    = str_replace(
					'{' . $field['name'] . '}',
					wp_kses_post( $name ),
					$from
				);
			}
		}

		if ( isset( $_POST['brochure'] ) && is_plugin_active( 'influactive-forms/functions.php' ) && get_option( 'modal_form_select' ) ) {
			$brochure_post_id = filter_input( INPUT_POST, 'brochure', FILTER_SANITIZE_NUMBER_INT );
			$relative_url     = wp_get_attachment_url( $brochure_post_id );
			$file_url         = home_url( $relative_url );
			$download_link    = sprintf(
			/* translators: %s is a placeholder for the file URL */
				__(
					"<a href='%s' target='_blank' title='Download our brochure'>Download our brochure</a>",
					'influactive-forms'
				),
				$file_url
			);
			$content          = str_replace( '{brochure}', $download_link, $content );
		}

		$from = sanitize_email( $from );
		$to   = sanitize_email( $to );

		$headers = array(
			'Content-Type: text/html; charset=UTF-8',
			'From: ' . $sitename . ' <' . $from . '>',
			'Reply-To: ' . $from,
		);

		if ( ! wp_mail( $to, $subject, $content, $headers ) ) {
			$error ++;
		}
	}

	if ( 0 === $error ) {
		wp_send_json_success(
			array(
				'message' => __( 'Email sent successfully', 'influactive-forms' ),
			)
		);
	} else {
		wp_send_json_error(
			array(
				'message' => __( 'Failed to send email', 'influactive-forms' ),
			)
		);

		exit;
	}

	exit;
}

add_action( 'wp_ajax_send_email', 'influactive_send_email' );
add_action( 'wp_ajax_nopriv_send_email', 'influactive_send_email' );

/**
 * Replaces the placeholder in a string with the label and value of a field.
 *
 * @param string $string      The string containing the placeholder.
 * @param string $field_name  The name of the field.
 * @param array  $label_value The label and value of the field.
 *
 * @return string The string with the placeholder replaced.
 */
function influactive_replace_field_placeholder( string $string, string $field_name, array $label_value ): string {
	if ( str_contains( $string, '{' . $field_name . ':label}' ) ) {
		$string = str_replace( '{' . $field_name . ':label}', $label_value[1], $string );
	}

	if ( str_contains( $string, '{' . $field_name . ':value}' ) ) {
		$string = str_replace( '{' . $field_name . ':value}', $label_value[0], $string );
	}

	return $string;
}
